map $http_x_forwarded_proto $fe_https {
  default $https;
  https on;
}

server {
    server_name example.com;
    root /app; ## <-- Your only path reference.
    listen 80;
    index index.php;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    	expires max;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    	expires max;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ '\.php$' {
        error_page 404 /index.php;

        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922 for details.
        include fastcgi_params;
        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param HTTPS $fe_https if_not_empty;
        fastcgi_intercept_errors on;
        fastcgi_pass php-fpm.local:9000;
        #CORS headers
         if ($request_method = 'OPTIONS') {

            add_header 'Access-Control-Allow-Origin' $http_origin always;

            #
            # Om nom nom cookies
            #

            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;

            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #

            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;

            #
            # Tell client that this pre-flight info is valid for 20 days
            #

            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;

            return 204;
         }

         if ($request_method = 'POST') {

            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;

         }

         if ($request_method = 'GET') {

            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;

         }
    }

    #max post size
    client_max_body_size 64m;

}
